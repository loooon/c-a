package com.credit.service.impl;

import java.util.Date;
import java.util.List;

import javax.annotation.Resource;

import com.credit.common.util.security.DigestUtils;
import com.credit.common.util.time.TimeUtil;
import com.credit.entity.dto.UserResourceDto;
import com.credit.service.UserPermissionService;
import org.springframework.stereotype.Service;

import com.credit.dao.UserMapper;
import com.credit.dao.query.Pager;
import com.credit.dao.query.UserQuery;
import com.credit.entity.User;
import com.credit.service.UserService;

/**
 * Created by wangjunling on 2017/3/31.
 */
@Service("userService")
public class UserServiceImpl implements UserService
{
    @Resource
    private UserMapper userMapper;

    @Resource
    private UserPermissionService userPermissionService;

    @Override
    public Pager<User> searchPage(UserQuery query)
    {
        List<User> userList = userMapper.selectByPage(query);
        int count = userMapper.countByPage(query);
        return new Pager<>(query, userList, count);
    }

    @Override
    public Integer save(String userName, String vkey, User user, String password) throws Exception
    {
        // 重新计算摘要
        String md5Password = DigestUtils.md5(DigestUtils.md5(password.getBytes("UTF-8")).getBytes("UTF-8"));
        user.setUserName(userName);
        user.setVkey(vkey);
        user.setPassword(md5Password);
        Date regTime = new Date();
        user.setUserType(1);
        user.setVerifyStateCode(2);
        user.setRegTime(regTime);
        user.setExpireDate(TimeUtil.getFutureYearDate(regTime,2));
        return userMapper.insert(user);
    }

    @Override
    public User searchUserByPhone(String phone)
    {
        return userMapper.selectByStringParam("phone",phone);
    }

    @Override
    public User searchUserByUserName(String userName)
    {
        return userMapper.selectByStringParam("user_name",userName);
    }

    @Override
    public Pager<UserResourceDto> searchDtoPage(UserQuery query)
    {
        List<UserResourceDto> userList = userMapper.selectByDtoPage(query);
        int count = userMapper.countByPage(query);
        return new Pager<>(query, userList, count);
    }
}
